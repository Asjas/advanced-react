// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider      = "prisma-client-js"
  output        = "node_modules/.prisma/client"
  binaryTargets = ["native", "linux-musl"]
}

model User {
  id                      String     @id @default(cuid())
  name                    String     @default("")
  email                   String     @unique @default("")
  password                String?
  cart                    CartItem[] @relation("CartItem_user")
  orders                  Order[]    @relation("Order_user")
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
}

model Product {
  id                    String        @id @default(cuid())
  name                  String        @default("")
  description           String        @default("")
  photo                 ProductImage? @relation("Product_photo", fields: [photoId], references: [id])
  photoId               String?       @unique @map("photo")
  status                String?       @default("DRAFT")
  price                 Int?
  from_CartItem_product CartItem[]    @relation("CartItem_product")
}

model ProductImage {
  id                   String      @id @default(cuid())
  image                Json?
  altText              String      @default("")
  product              Product?    @relation("Product_photo")
  from_OrderItem_photo OrderItem[] @relation("OrderItem_photo")
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int?     @default(1)
  product   Product? @relation("CartItem_product", fields: [productId], references: [id])
  productId String?  @map("product")
  user      User?    @relation("CartItem_user", fields: [userId], references: [id])
  userId    String?  @map("user")

  @@index([productId])
  @@index([userId])
}

model OrderItem {
  id          String        @id @default(cuid())
  name        String        @default("")
  description String        @default("")
  photo       ProductImage? @relation("OrderItem_photo", fields: [photoId], references: [id])
  photoId     String?       @map("photo")
  price       Int?
  quantity    Int?          @default(1)
  order       Order?        @relation("OrderItem_order", fields: [orderId], references: [id])
  orderId     String?       @map("order")

  @@index([photoId])
  @@index([orderId])
}

model Order {
  id     String      @id @default(cuid())
  total  Int?
  items  OrderItem[] @relation("OrderItem_order")
  user   User?       @relation("Order_user", fields: [userId], references: [id])
  userId String?     @map("user")
  charge String      @default("")

  @@index([userId])
}
